<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--
        扫包
    -->
    <context:component-scan base-package="controller"/>
    <context:component-scan base-package="service.impl"/>

    <!--
        配置ViewResolver 视图解析器
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--
        引入文件
    -->
    <context:property-placeholder location="classpath:datasource.properties"/>

    <!--
        dataSource
    -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--
        mybatis
    -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <!--数据源-->
        <property name="dataSource" ref="dataSource" />
        <!--别名-->
        <property name="typeAliasesPackage" value="entity"/>
        <!--映射文件-->
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
        <!--分页-->
        <property name="plugins">
            <list>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <prop key="helperDialect">mysql</prop>
                        </props>
                    </property>
                </bean>
            </list>
        </property>
    </bean>


    <!--
        配置MapperScannerConfigurer，作用：创建dao层代理实例，放到IoC容器中
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="dao"/>
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    </bean>

    <!--
        事务管理器
    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--
        配置驱动
    -->
    <!--mvc驱动配置-->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!--事务注解驱动-->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!--
        配置视图直接访问WEB-INF下的jsp
    -->
    <mvc:view-controller path="/showLogin" view-name="login"/>
    <!--<mvc:view-controller path="/index2" view-name="register"/>-->


    <!--
        静态资源访问
    -->
    <!--<mvc:default-servlet-handler/> 或者下面的-->

    <!--<mvc:resources mapping="/css/**" location="/WEB-INF/css"/>-->
    <!--<mvc:resources mapping="/images/**" location="/WEB-INF/images"/>-->
    <!--<mvc:resources mapping="/js/**" location="/WEB-INF/js"/>-->

</beans>